<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


    <!--隐式的向spring注册像@Autowired、@Resource、@PostConstruct、@PreDestroy等注解-->
    <context:annotation-config/>
    <!--
    自动去扫描base-pack下面或者子包下面的Java文件，
    如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean。
    这里做了限制只扫描@controller
    -->
    <context:component-scan base-package="com.palmer.demo.mvc.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--读写JSON数据
    jackson版本为2用MappingJackson2HttpMessageConverter
    避免IE执行AJAX时，返回JSON出现下载文件
    -->
    <!--我们在使用springmvc中的 @ResponseBody 注解返回JSON时可以配置Json转换器如下:-->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--将请求信息转换为字符串-->
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--HttpMessageConvert接口bean的注册；启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list >
                <ref bean="mappingJacksonHttpMessageConverter" />
                <ref bean="stringHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

    <!-- 对静态资源文件的访问，让spring MVC框架来处理静态资源-->
    <!--该配置的作用是：DispatcherServlet不会拦截以/images等开头的所有请求路径，并当作静态资源交由Servlet处理。-->
    <mvc:resources mapping="/images/**" location="WEB-INF/views/css/" cache-period="31556926"/>
    <mvc:resources mapping="/js/**" location="WEB-INF/views/js/" cache-period="31556926"/>
    <mvc:resources mapping="/css/**" location="WEB-INF/views/static/" cache-period="31556926"/>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 请求的编码格式，默认为ISO-8859-1 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值，单位为字节 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
        <!--上传文件的临时目录，上传成功后自动清除临时目录中的临时文件-->
        <!--<property name="uploadTempDir" value="upload/temp"/>-->
    </bean>

</beans>